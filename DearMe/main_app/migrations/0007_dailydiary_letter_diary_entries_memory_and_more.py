# Generated by Django 5.2.6 on 2025-09-16 22:32

import django.db.models.deletion
import django.utils.timezone
import encrypted_model_fields.fields
import main_app.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0006_customuser_hide_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyDiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateField()),
                ('text', encrypted_model_fields.fields.EncryptedTextField(blank=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=main_app.models.diary_file_path)),
                ('audio', models.FileField(blank=True, null=True, upload_to=main_app.models.diary_file_path)),
                ('favorite_music', encrypted_model_fields.fields.EncryptedTextField(blank=True, help_text='Optional: list your favorite music or upload an MP3 file')),
                ('favorite_foods', encrypted_model_fields.fields.EncryptedTextField(blank=True, help_text='Optional: list your favorite foods')),
                ('favorite_shows', encrypted_model_fields.fields.EncryptedTextField(blank=True, help_text='Optional: list your favorite anime/TV shows or add links')),
                ('take_to_grave', models.BooleanField(default=False, help_text="Diary won't be shared after death")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diary_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-entry_date'],
            },
        ),
        migrations.AddField(
            model_name='letter',
            name='diary_entries',
            field=models.ManyToManyField(blank=True, related_name='included_in_letters', to='main_app.dailydiary'),
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('memory_type', models.CharField(choices=[('happy', 'Happy'), ('sad', 'Sad'), ('funny', 'Funny'), ('travel', 'Travel'), ('achievement', 'Achievement'), ('family', 'Family'), ('romantic', 'Romantic'), ('other', 'Other')], default='happy', max_length=50)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=255)),
                ('is_private', models.BooleanField(default=True, help_text='Memory is private by default')),
                ('take_to_grave', models.BooleanField(default=False, help_text="Memory won't be shared after death")),
                ('photo', models.ImageField(blank=True, null=True, upload_to=main_app.models.memory_file_path)),
                ('audio', models.FileField(blank=True, null=True, upload_to=main_app.models.memory_file_path)),
                ('video', models.FileField(blank=True, null=True, upload_to=main_app.models.memory_file_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('memory_date', models.DateField(default=django.utils.timezone.now)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-memory_date', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='dailydiary',
            name='memories',
            field=models.ManyToManyField(blank=True, related_name='included_in_diaries', to='main_app.memory'),
        ),
        migrations.AddField(
            model_name='letter',
            name='memories',
            field=models.ManyToManyField(blank=True, related_name='included_in_letters', to='main_app.memory'),
        ),
        migrations.AlterUniqueTogether(
            name='dailydiary',
            unique_together={('owner', 'entry_date')},
        ),
    ]
